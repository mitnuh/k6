// go generate
// generated by js/modules/k6/html/gen/main.go directed by js/modules/k6/html/elements.go;  DO NOT EDIT
package html
func selToElement(sel Selection) goja.Value {
	if sel.sel.Length() == 0 {
		return goja.Undefined()
	}

	elem := Element{sel.sel.Nodes[0], &sel}
	
	switch elem.node.Data {  
	case AnchorTagName:
		return sel.rt.ToValue(AnchorElement{HrefElement{elem}})
	 
	case AreaTagName:
		return sel.rt.ToValue(AreaElement{HrefElement{elem}})
	 
	case BaseTagName:
		return sel.rt.ToValue(BaseElement{elem})
	 
	case ButtonTagName:
		return sel.rt.ToValue(ButtonElement{elem})
	 
	default:
		return sel.rt.ToValue(elem)
	}
}

 
func (e HrefElement) Rel() string {
	return e.attrAsString("rel")
}
 
func (e AreaElement) Href() string {
	return e.attrAsString("href")
}
 
func (e AreaElement) AccessKey() bool {
	return e.attrIsPresent("accesskey")
}
 
func (e BaseElement) Autofocus() string {
	return e.attrAsString("autofocus")
}
 
func (e ButtonElement) AccessKey() string {
	return e.attrAsString("accesskey")
}
 
func (e ButtonElement) Autofocus() string {
	return e.attrAsString("autofocus")
}
 
func (e ButtonElement) Disabled() string {
	return e.attrAsString("disabled")
}

